package com.hams.servlets;

import java.io.IOException;
import java.io.PrintWriter;

import oracle.jdbc.util.Login;
import org.apache.commons.codec.binary.*;

import org.apache.log4j.Logger;
import org.apache.commons.codec.binary.*;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.Configuration;

//import javax.security.auth.login.Configuration;
import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.List;

/**
 * Servlet implementation class LoginServlet
 */
@WebServlet("/LoginServlet")
public class LoginServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
	static final Logger LOGGER = Logger.getLogger(SaveOrEditAppointmentServlet.class);
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		
		 String name = request.getParameter("name");  
	        String password1 = request.getParameter("password");  
	        byte[] encodedBytes = Base64.encodeBase64(password1.getBytes());
	        String password = new String(encodedBytes);
	        System.out.println(password);
	        
	        PrintWriter out = null ;
			try {
				out = response.getWriter();
			} catch (Exception e) {
				e.printStackTrace();
				LOGGER.info(e);
			} 
			String password1 = TO_BASE64(password);

	        //check login if value of login_check will be true then login should be successful otherwise don't give permission
	        //boolean login_check = loginCheck(name ,password);
	        
	        HttpSession httpSession = request.getSession();
			  SessionFactory factory = new Configuration().configure().buildSessionFactory();
			  Session session = factory.openSession();
			  //String query = "from Login login where nmae=? and password=?";
			  //String password1 = TO_BASE64(password);
			  String query ="from user where username=? and password=?";
			  Query queryObj = session.createQuery(query);
			  queryObj.setString(0, name);
			  queryObj.setString(1, password1);
			  List<Login> records = queryObj.list();
			  if(records.size()>0){
			   request.setAttribute("loginstatus", "Login Successful.");
			   boolean login_check = true ;
			   
			   String nextJSP = "/appointment.jsp";
				RequestDispatcher dispatcher = getServletContext().getRequestDispatcher(nextJSP);
				dispatcher.forward(request,response);
				}
			  
			  else
			  {
				  /* login unsuccessful because of failed validation */
		            
		        	out.print("Sorry, username or password error!");  
		            
		        	/* redirect user again to login page */
		        	
		            String nextJSP = "/index.jsp";
					RequestDispatcher dispatcher = getServletContext().getRequestDispatcher(nextJSP);
					
					try {
						dispatcher.forward(request,response);
					} catch (ServletException e) {
						e.printStackTrace();
					} catch(IOException e ){
						e.printStackTrace();
					}
		        	
		        }  
		        /* Closes the stream and releases any system resources associated with it. Closing a previously closed stream has no effect.
		 */
		        out.close();  
				  
				  
				  
			  }
	}
		
        
		 
      